services:
  # .NET 9
  pandesal-express:
    build:
      context: .
      dockerfile: PandesalExpress.Host/Dockerfile
      target: final
    container_name: pandesal-express-app
    hostname: pandesal-express
    ports:
      - "8080:8080"   # HTTP
      - "8081:8081"   # HTTPS
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:8080;https://+:8081
      - ASPNETCORE_HTTPS_PORT=8081
      - ASPNETCORE_Kestrel__Certificates__Default__Password=password
      - ASPNETCORE_Kestrel__Certificates__Default__Path=/https/aspnetapp.pfx
      # Database Configuration
      - ConnectionStrings__DefaultConnection=Host=postgresql;Port=5432;Database=pandesal_express;Username=pandesal_user;Password=${POSTGRES_PASSWORD:-pandesal_secret}
      # Redis Configuration
      - ConnectionStrings__RedisConnection=redis:6379
      # JWT Configuration
      - JwtSettings__SecretKey=${JWT_SECRET_KEY:-your-super-secret-jwt-key-that-should-be-at-least-32-characters-long}
      - JwtSettings__Issuer=PandesalExpress
      - JwtSettings__Audience=PandesalExpress.Client
      - JwtSettings__ExpiryInMinutes=60
      # Logging
      - Logging__LogLevel__Default=Information
      - Logging__LogLevel__Microsoft.AspNetCore=Warning
      - Logging__LogLevel__Microsoft.EntityFrameworkCore=Information
    volumes:
      # HTTPS certificate for development
      - ~/.aspnet/https:/https:ro
      # Optional: Mount source code for development hot reload
      - ./PandesalExpress.Host:/app/source:ro
    networks:
      - pandesal-network
    depends_on:
      postgresql:
        condition: service_healthy
      redis:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8080/health" ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # PostgreSQL Database Service
  postgresql:
    image: postgres:16-alpine
    container_name: pandesal-express-db
    hostname: postgresql
    environment:
      - POSTGRES_DB=pandesal_express
      - POSTGRES_USER=pandesal_user
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-pandesal_secret}
      - POSTGRES_INITDB_ARGS=--encoding=UTF-8 --lc-collate=C --lc-ctype=C
    volumes:
      - postgres-data:/var/lib/postgresql/data
      # Optional: Custom initialization scripts
      - ./scripts/init-db.sql:/docker-entrypoint-initdb.d/init-db.sql:ro
    ports:
      - "5432:5432"
    networks:
      - pandesal-network
    restart: unless-stopped
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U pandesal_user -d pandesal_express" ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    command: >
      postgres
      -c shared_preload_libraries=pg_stat_statements
      -c pg_stat_statements.track=all
      -c max_connections=200
      -c shared_buffers=256MB
      -c effective_cache_size=1GB
      -c maintenance_work_mem=64MB
      -c checkpoint_completion_target=0.9
      -c wal_buffers=16MB
      -c default_statistics_target=100

  # Redis Cache Service
  redis:
    image: redis:7-alpine
    container_name: pandesal-express-cache
    hostname: redis
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
      - ./redis/redis.conf:/usr/local/etc/redis/redis.conf:ro
    networks:
      - pandesal-network
    restart: unless-stopped
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 10s
    command: redis-server /usr/local/etc/redis/redis.conf
    sysctls:
      - net.core.somaxconn=1024

  # pgAdmin for database management (development only)
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: pandesal-express-pgadmin
    environment:
      - PGADMIN_DEFAULT_EMAIL=${PGADMIN_EMAIL:-admin@pandesalexpress.com}
      - PGADMIN_DEFAULT_PASSWORD=${PGADMIN_PASSWORD:-admin123}
      - PGADMIN_CONFIG_SERVER_MODE=False
    volumes:
      - pgadmin-data:/var/lib/pgadmin
    ports:
      - "8082:80"
    networks:
      - pandesal-network
    depends_on:
      - postgresql
    restart: unless-stopped
    profiles:
      - development

  # Redis Commander for Redis management (development only)
  redis-commander:
    image: rediscommander/redis-commander:latest
    container_name: pandesal-express-redis-commander
    environment:
      - REDIS_HOSTS=local:redis:6379
      - HTTP_USER=${REDIS_COMMANDER_USER:-admin}
      - HTTP_PASSWORD=${REDIS_COMMANDER_PASSWORD:-admin123}
    ports:
      - "8083:8081"
    networks:
      - pandesal-network
    depends_on:
      - redis
    restart: unless-stopped
    profiles:
      - development

# Named volumes for data persistence
volumes:
  postgres-data:
    driver: local
    name: pandesal-express-postgres-data
  redis-data:
    driver: local
    name: pandesal-express-redis-data
  pgadmin-data:
    driver: local
    name: pandesal-express-pgadmin-data

# Custom network for service communication
networks:
  pandesal-network:
    driver: bridge
    name: pandesal-express-network
    ipam:
      config:
        - subnet: 172.20.0.0/16
